@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix map: <http://mapping.example.com/> .
@prefix ma: <http://www.w3.org/ns/ma-ont#> .
@prefix sd: <http://www.w3.org/ns/sparql-service-description#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix rev: <http://purl.org/stuff/rev#> .
@prefix v: <http://rdf.data-vocabulary.org/#> .
@prefix schema: <http://schema.org/> .
@prefix gtfs: <http://vocab.gtfs.org/terms#> .
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> .
@prefix dct: <http://purl.org/dc/terms/> .
@base <http://example.com> .

# <#AgencyMapping> a rr:TriplesMap;
#   rml:logicalSource [
#     rml:source "/home/thomas/data-bench/de-lijn-gtfs/agency.csv";
#     rml:referenceFormulation ql:CSV
#   ];

#   rr:subjectMap [
#     rr:template "http://example.com/de-lijn/agency/{agency_id}" ;
#     rr:class gtfs:Agency
#   ];

#   rr:predicateObjectMap [
#     rr:predicate gtfs:fareUrl ;
#     rr:objectMap [
#       rml:reference "agency_url";
#       rr:termType rr:IRI ;
#     ]
#   ];

#   rr:predicateObjectMap [
#     rr:predicate foaf:name ;
#     rr:objectMap [
#       rml:reference "agency_name"
#     ]
#   ].

#   rr:predicateObjectMap [
#     rr:predicate gtfs:timeZone ;
#     rr:objectMap [
#       rml:reference "agency_timezone"
#     ]
#   ];

#   rr:predicateObjectMap [
#     rr:predicate dct:language ;
#     rr:objectMap [
#       rml:reference "agency_lang"
#     ]
#   ];

#   rr:predicateObjectMap [
#     rr:predicate foaf:phone ;
#     rr:objectMap [
#       rml:reference "agency_phone"
#     ]
#   ].

# <#CalendarDatesMapping> a rr:TriplesMap;
#   rml:logicalSource [
#     rml:source "/home/thomas/data-bench/de-lijn-gtfs/calendar_dates.csv" ;
#     rml:referenceFormulation ql:CSV
#   ];

#   rr:subjectMap [
#     rr:template "http://example.com/de-lijn/calendar_date_rule/{service_id}-{date}";
#     rr:class gtfs:CalendarDateRule
#   ];

#   rr:predicateObjectMap [
#     rr:predicate dct:date ;
#     rr:objectMap [
#       rml:reference "date" ;
#       rr:datatype xsd:date
#     ]
#   ];

#   rr:predicateObjectMap [
#     rr:predicate gtfs:dateAddition ;
#     rr:objectMap [
#       rml:reference "exception_type" ;
#       rr:datatype xsd:boolean
#     ]
#   ].

# <#FeedMapping> a rr:TriplesMap;
#   rml:logicalSource [
#     rml:source "/home/thomas/data-bench/de-lijn-gtfs/feed_info.csv";
#     rml:referenceFormulation ql:CSV
#   ];

#   rr:subjectMap [
#     rr:template "http://example.com/de-lijn/feed/{feed_publisher_name}" ;
#     rr:class gtfs:Feed
#   ];

#   rr:predicateObjectMap [
#     rr:predicate gtfs:fareUrl;
#     rr:objectMap [
#       rml:reference "feed_publisher_url"
#     ]
#   ];

#   rr:predicateObjectMap [
#     rr:predicate dct:language;
#     rr:objectMap [
#       rml:reference "feed_lang"
#     ]
#   ];

#   rr:predicateObjectMap [
#     rr:predicate dct:date ;
#     rr:objectMap [
#       rml:reference "feed_start_date" ;
#       rr:datatype xsd:date
#     ]
#   ];

#   rr:predicateObjectMap [
#     rr:predicate dct:date ;
#     rr:objectMap [
#       rml:reference "feed_end_date" ;
#       rr:datatype xsd:date
#     ]
#   ];

#   rr:predicateObjectMap [
#     rr:predicate schema:version ;
#     rr:objectMap [
#       rml:reference "feed_version" 
#     ]
#   ];

#   rr:predicateObjectMap [
#     rr:predicate schema:email ;
#     rr:objectMap [
#       rml:reference "feed_contact_email" 
#     ]
#   ].

# <#RoutesMapping> a rr:TriplesMap;
#   rml:logicalSource [
#     rml:source "/home/thomas/data-bench/de-lijn-gtfs/routes.csv" ;
#     rml:referenceFormulation ql:CSV
#   ];

#   rr:subjectMap [
#     rr:template "http://example.com/de-lijn/routes/{route_id}";
#     rr:class gtfs:Route
#   ];

  # rr:predicateObjectMap [
  #   rr:predicate gtfs:shortName ;
  #   rr:objectMap [
  #     rml:reference "route_short_name"
  #   ]
  # ];

  # rr:predicateObjectMap [
  #   rr:predicate gtfs:longName ;
  #   rr:objectMap [
  #     rml:reference "route_long_name"
  #   ]
  # ].

  # rr:predicateObjectMap [
  #   rr:predicate dct:description ;
  #   rr:objectMap [
  #     rml:reference "route_desc"
  #   ]
  # ];

  # rr:predicateObjectMap [
  #   rr:predicate gtfs:routeType ;
  #   rr:objectMap [
  #     rml:reference "route_type"
  #   ]
  # ];

  # rr:predicateObjectMap [
  #   rr:predicate gtfs:routeUrl ;
  #   rr:objectMap [
  #     rml:reference "route_url" ;
  #     rr:termType rr:IRI
  #   ]
  # ];

  # rr:predicateObjectMap [
  #   rr:predicate gtfs:color ;
  #   rr:objectMap [
  #     rml:reference "route_color"
  #   ]
  # ];

  # rr:predicateObjectMap [
  #   rr:predicate gtfs:textColor ;
  #   rr:objectMap [
  #     rml:reference "route_text_color"
  #   ]
  # ];

  # rr:predicateObjectMap [
  #   rr:predicate gtfs:Agency;
  #   rr:objectMap [
  #     rr:parentTriplesMap <#AgencyMapping>;
  #     rr:joinCondition [
  #       rr:child "agency_id" ;
  #       rr:parent "agency_id" ;
  #     ];
  #   ]
  # ].

# <#ServiceMapping> a rr:TriplesMap;
#   rml:logicalSource [
#     rml:source "/home/thomas/data-bench/de-lijn-gtfs/calendar_dates.csv" ;
#     rml:referenceFormulation ql:CSV
#   ];

#   rr:subjectMap [
#     rr:template "http://example.com/de-lijn/services/{service_id}";
#     rr:class gtfs:Service
#   ];

#   rr:predicateObjectMap [
#     rr:predicate gtfs:serviceRule ;
#     rr:objectMap [
#       rr:parentTriplesMap <#CalendarDatesMapping>;
#       rr:joinCondition [
#         rr:child "service_id" ;
#         rr:parent "service_id" ;
#       ];
#     ]
#   ].

# <#StopsMapping> a rr:TriplesMap;
#   rml:logicalSource [
#     rml:source "/home/thomas/data-bench/de-lijn-gtfs/stops.csv" ;
#     rml:referenceFormulation ql:CSV
#   ];

#   rr:subjectMap [
#     rr:template "http://example.com/de-lijn/stops/{stop_id}";
#     rr:class gtfs:Stop
#   ].

  # rr:predicateObjectMap [
  #   rr:predicate gtfs:code ;
  #   rr:objectMap [
  #     rml:reference "stop_code";
  #     rr:datatype xsd:integer
  #   ]
  # ];

  # rr:predicateObjectMap [
  #   rr:predicate dct:identifier ;
  #   rr:objectMap [
  #     rml:reference "stop_id"
  #   ]
  # ];

  # rr:predicateObjectMap [
  #   rr:predicate foaf:name ;
  #   rr:objectMap [
  #     rml:reference "stop_name"
  #   ]
  # ];

  # rr:predicateObjectMap [
  #   rr:predicate dct:description ;
  #   rr:objectMap [
  #     rml:reference "stop_desc"
  #   ]
  # ];

  # rr:predicateObjectMap [
  #   rr:predicate geo:lat ;
  #   rr:objectMap [
  #     rml:reference "stop_lat";
  #     rr:datatype xsd:double
  #   ]
  # ];

  # rr:predicateObjectMap [
  #   rr:predicate geo:long ;
  #   rr:objectMap [
  #     rml:reference "stop_lon" ;
  #     rr:datatype xsd:double
  #   ]
  # ];

  # rr:predicateObjectMap [
  #   rr:predicate gtfs:zone ;
  #   rr:objectMap [
  #     rml:reference "zone_id"
  #   ]
  # ];

  # rr:predicateObjectMap [
  #   rr:predicate foaf:page ;
  #   rr:objectMap [
  #     rr:template "{stop_url}"
  #   ]
  # ];

  # rr:predicateObjectMap [
  #   rr:predicate gtfs:locationType ;
  #   rr:objectMap [
  #     rml:reference "location_type";
  #     rr:datatype xsd:enumeration
  #   ]
  # ];

  # rr:predicateObjectMap [
  #   rr:predicate gtfs:wheelchairAccessible ;
  #   rr:objectMap [
  #     rml:reference "wheelchair_boarding"
  #   ]
  # ].

<#StopTimesMapping> a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/thomas/data-bench/de-lijn-gtfs/stop_times_02.csv";
    rml:referenceFormulation ql:CSV
  ];

  rr:subjectMap [
    rr:template "http://example.com/de-lijn/stoptimes/{trip_id}-{stop_id}";
    rr:class gtfs:StopTime
  ];

  # rr:predicateObjectMap [
  #   rr:predicate gtfs:trip ;
  #   rr:objectMap [
  #     rr:parentTriplesMap <#TripsMapping>;
  #     rr:joinCondition [
  #       rr:child "trip_id";
  #       rr:parent "trip_id"
  #     ];
  #   ]
  # ];

  # #4082160 triples
  rr:predicateObjectMap [
    rr:predicate gtfs:trip ;
    rr:objectMap [
      rr:template "http://example.com/de-lijn/trips/{trip_id}";
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate gtfs:arrivalTime ;
    rr:objectMap [
      rml:reference "arrival_time" ;
      rr:datatype xsd:time
    ]
  ];

  #18280382
  rr:predicateObjectMap [
    rr:predicate gtfs:departureTime ;
    rr:objectMap [
      rml:reference "departure_time" ;
      rr:datatype xsd:dateTime
    ]
  ];   

  # rr:predicateObjectMap [
  #   rr:predicate gtfs:stop ;
  #   rr:objectMap [
  #     rr:parentTriplesMap <#StopsMapping>;
  #     rr:joinCondition [
  #       rr:child "stop_id" ;
  #       rr:parent "stop_id" ;
  #     ];
  #   ]
  # ];

  rr:predicateObjectMap [
    rr:predicate gtfs:stop ;
    rr:objectMap [
      rr:template "http://example.com/de-lijn/stops/{stop_id}";
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate gtfs:stopSequence ;
    rr:objectMap [
      rml:reference "stop_sequence" ;
      rr:datatype xsd:integer
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate gtfs:headsign ;
    rr:objectMap [
      rml:reference "stop_headsign"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate gtfs:pickupType ;
    rr:objectMap [
      rml:reference "pickup_type" ;
      rr:datatype xsd:enumeration
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate gtfs:dropOffType ;
    rr:objectMap [
      rml:reference "drop_off_type" ;
      rr:datatype xsd:enumeration
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate gtfs:distanceTraveled ;
    rr:objectMap [
      rml:reference "shape_dist_traveled"
    ]
  ].

# <#TripsMapping> a rr:TriplesMap;
#   rml:logicalSource [
#     rml:source "/home/thomas/data-bench/de-lijn-gtfs/trips.csv" ;
#     rml:referenceFormulation ql:CSV
#   ];

#   rr:subjectMap [
#     rr:template "http://example.com/de-lijn/trips/{trip_id}";
#     rr:class gtfs:Trip
#   ];

#   rr:predicateObjectMap [
#     rr:predicate gtfs:route;
#     rr:objectMap [
#       rr:parentTriplesMap <#RoutesMapping>;
#       rr:joinCondition [
#         rr:child "route_id" ;
#         rr:parent "route_id" ;
#       ];
#     ]
#   ].

  # rr:predicateObjectMap [
  #   rr:predicate gtfs:route;
  #   rr:objectMap [
  #     rml:reference "route_id"
  #   ]
  # ];

  # rr:predicateObjectMap [
  #   rr:predicate gtfs:service;
  #   rr:objectMap [
  #     rr:parentTriplesMap <#ServiceMapping>;
  #     rr:joinCondition [
  #       rr:child "service_id" ;
  #       rr:parent "service_id" ;
  #     ];
  #   ]
  # ];

  # rr:predicateObjectMap [
  #   rr:predicate dct:identifier;
  #   rr:objectMap [
  #     rml:reference "trip_id"
  #   ]
  # ];

  # rr:predicateObjectMap [
  #   rr:predicate gtfs:headsign ;
  #   rr:objectMap [
  #     rml:reference "trip_headsign"
  #   ]
  # ];

  # rr:predicateObjectMap [
  #   rr:predicate gtfs:shortName ;
  #   rr:objectMap [
  #     rml:reference "trip_short_name"
  #   ]
  # ];

  # rr:predicateObjectMap [
  #   rr:predicate gtfs:direction ;
  #   rr:objectMap [
  #     rml:reference "direction_id"
  #   ]
  # ].
  