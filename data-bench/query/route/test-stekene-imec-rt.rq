SPARQL
PREFIX rr: <http://www.w3.org/ns/r2rml#> 
PREFIX rml: <http://semweb.mmlab.be/ns/rml#> 
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
PREFIX ql: <http://semweb.mmlab.be/ns/ql#> 
PREFIX map: <http://mapping.example.com/> 
PREFIX ma: <http://www.w3.org/ns/ma-ont#> 
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#> 
PREFIX sd: <http://www.w3.org/ns/sparql-service-description#> 
PREFIX dc: <http://purl.org/dc/elements/1.1/> 
PREFIX foaf: <http://xmlns.com/foaf/0.1/> 
PREFIX rev: <http://purl.org/stuff/rev#> 
PREFIX v: <http://rdf.data-vocabulary.org/#> 
PREFIX schema: <http://schema.org/> 
PREFIX gtfs: <http://vocab.gtfs.org/terms#> 
PREFIX geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> 
PREFIX dct: <http://purl.org/dc/terms/> 


SELECT ?routeNumberSTSN ?tripNameSTSN ?stopNameSTdl ?timeSTdl ?delaySTdl ?stopNameSNdl ?timeSNdl ?delaySNdl
         ?routeTypeSNGSP ?tripNameSNGSP ?SNname ?bluebikeSN ?timeSNnmbs ?delaySNnmbs ?GSPname ?bluebikeGSP ?timeGSPnmbs ?delayGSPnmbs
          ?routeNumberGSPIM ?tripNameGSPIM ?stopNameGSPdl ?timeGSPdl ?delayGSPdl ?stopNameIMECdl ?timeIMECdl ?delayIMECdl
WHERE {
    BIND("2023-05-19T07:00:00"^^xsd:dateTime as ?startTime)
    BIND((?startTime + 4000) AS ?timeSN)
    # BIND("2023-05-19T09:20:00"^^xsd:dateTime as ?endTime)
    
    # #########################################################
    # ## Part De Lijn Stekene to Sint-Niklaas
    # #########################################################

    # BIND("2023-05-19T06:00:00"^^xsd:dateTime as ?startTime)
    # BIND("2023-05-19T08:00:00"^^xsd:dateTime as ?endTime)
    ?stopStekenedl #a gtfs:Stop ;
            foaf:name ?stopNameSTdl ;
            gtfs:code 204391 .

    ?stopSNdl #a gtfs:Stop ;
            foaf:name ?stopNameSNdl ;
            gtfs:code 204714 .
    
    ?tripSTSN #a gtfs:Trip ;
            gtfs:headsign ?tripNameSTSN ;
            gtfs:route ?routeSTSN .
    OPTIONAL { ?tripSTSN rdfs:label ?cancelSTSN }.
    FILTER(!BOUND(?cancelSTSN))
    
    ?routeSTSN #a gtfs:Route ;
            gtfs:shortName ?routeNumberSTSN .

    ?stopTimeStekenedl #a gtfs:StopTime ;
            gtfs:stop ?stopStekenedl ;
            gtfs:trip ?tripSTSN ;
            gtfs:departureTime ?departureTimeSTdl .
    OPTIONAL { ?stopTimeStekenedl gtfs:comment ?delaySTdl }.
    # BIND(IF(BOUND(?delaySTdl),(?departureTimeSTdl + ?delaySTdl), ?departureTimeSTdl) as ?timeSTdl)
    BIND(?departureTimeSTdl as ?timeSTdl)
    FILTER (?timeSTdl >= ?startTime )
    
    ?stopTimeSNdl #a gtfs:StopTime ;
            gtfs:stop ?stopSNdl ;
            gtfs:trip ?tripSTSN ;
            gtfs:departureTime ?departureTimeSNdl .
    OPTIONAL { ?stopTimeSNdl gtfs:comment ?delaySNdl }.
    # BIND(IF(BOUND(?delaySNdl),(?departureTimeSNdl + ?delaySNdl), ?departureTimeSNdl) as ?timeSNdl)
    BIND(?departureTimeSNdl as ?timeSNdl)
    # FILTER (?departureTimeSNdl > ?departureTimeSTdl && ?departureTimeSNdl < ?departureTimeSNnmbs)
    FILTER (?timeSNdl > ?timeSTdl && ?timeSNdl < ?timeSNnmbs)

    # # BIND ( (?departureTimeGSPdl - 300) AS ?bufferGSPdl)    #buffer to have time to transfer from train to bus
    {
        #########################################################
        ## Part NMBS Sint-Niklaas to  Gent-Sint-Pieters
        #########################################################
        SELECT * # ?routeTypeSNGSP ?tripNameSNGSP ?SNname ?bluebikeSN ?departureTimeSNnmbs ?GSPname ?bluebikeGSP ?departureTimeGSPnmbs ?routeNumberGSPIM ?tripNameGSPIM ?stopNameGSPdl ?departureTimeGSPdl ?stopNameIMECdl ?departureTimeIMECdl
        WHERE {
            # BIND("2023-05-19T07:00:00"^^xsd:dateTime as ?startTime)
            # BIND("2023-05-19T08:30:00"^^xsd:dateTime as ?endTime)
            BIND("Sint-Niklaas" as ?SNname)
            BIND("Gent-Sint-Pieters" as ?GSPname)

            # BIND("2023-05-19T08:20:00"^^xsd:dateTime as ?timeStationSN)
            BIND("2023-05-19T08:55:00"^^xsd:dateTime as ?timeStationGSP)            
            BIND((?timeStationGSP - 4000) as ?timeMinGSP)     

            ?stopSNnmbs foaf:name ?SNname;
                # a gtfs:Stop ;
                gtfs:bikeAllowed ?bluebikeSN .

            ?stopGSPnmbs foaf:name ?GSPname ;
                # a gtfs:Stop ;
                gtfs:bikeAllowed ?bluebikeGSP .

            ?tripSNGSP #a gtfs:Trip ;    
                gtfs:headsign ?tripNameSNGSP ;
                gtfs:route ?routeSNGSP .
            OPTIONAL { ?tripSNGSP rdfs:label ?cancelSNGSP }.
            FILTER(!BOUND(?cancelSNGSP))

            ?routeSNGSP 
                gtfs:shortName ?routeTypeSNGSP.

            ?stopTimeSNnmbs #a gtfs:StopTime;
                gtfs:stop ?stopSNnmbs ;
                gtfs:trip ?tripSNGSP ;
                gtfs:departureTime ?departureTimeSNnmbs .
            OPTIONAL { ?stopTimeSNnmbs gtfs:comment ?delaySNnmbs }.
            OPTIONAL { ?stopTimeSNnmbs rdfs:label ?skippedSN }.

            BIND(IF(BOUND(?delaySNnmbs), ?delaySNnmbs, 0) as ?delaySNnmbs)
            BIND((?departureTimeSNnmbs + ?delaySNnmbs) as ?timeSNnmbs)
            
            FILTER(!BOUND(?skippedSN))
            # FILTER (?departureTimeSNnmbs >= ?departureTimeSNdl) 
            FILTER (?timeSNnmbs >= ?timeMinGSP) 

            ?stopTimeGSPnmbs #a gtfs:StopTime;
                gtfs:stop ?stopGSPnmbs ;
                gtfs:trip ?tripSNGSP ;
                gtfs:departureTime ?departureTimeGSPnmbs .
            OPTIONAL { ?stopTimeGSPnmbs gtfs:comment ?delayGSPnmbs }.
            OPTIONAL { ?stopTimeGSPnmbs rdfs:label ?skippedGSP }.

            BIND(IF(BOUND(?delayGSPnmbs), ?delayGSPnmbs, 0) as ?delayGSPnmbs)
            BIND((?departureTimeGSPnmbs + ?delayGSPnmbs) as ?timeGSPnmbs)
            
            FILTER(!BOUND(?skippedGSP))
            # FILTER (?departureTimeGSPnmbs > ?departureTimeSNnmbs && ?departureTimeGSPnmbs < ?departureTimeGSPdl)
            FILTER (?timeGSPnmbs > ?timeSNnmbs && ?timeGSPnmbs < ?timeGSPdl) 

            {
                #########################################################
                ## Part De Lijn Gent-Sint-Pieters to IMEC AA-Tower
                #########################################################
                SELECT * # ?routeNumberGSPIM ?tripNameGSPIM ?stopNameGSPdl ?departureTimeGSPdl ?stopNameIMECdl ?departureTimeIMECdl
                WHERE {
                    
                    BIND("2023-05-19T09:20:00"^^xsd:dateTime as ?endTime)
                    BIND("2023-05-19T00:00:00"^^xsd:dateTime as ?midnight)
                    # BIND("2023-05-19T08:55:00"^^xsd:dateTime as ?timeStationGSP)
                    BIND((?endTime - 4000) AS ?windowGSP)
                    #details stop GSP delijn
                    ?stopGSPdl #a gtfs:Stop ;
                        foaf:name ?stopNameGSPdl ;
                        gtfs:code 204917 .       #station gent sp

                    #details stop IMEC delijn
                    ?stopIMECdl #a gtfs:Stop ;
                        foaf:name ?stopNameIMECdl ;
                        gtfs:code 200659 .        #zwijnaarde technologiepark

                    #details trip GSP IMEC delijn
                    ?tripGSPIMEC #a gtfs:Trip ;
                        gtfs:headsign ?tripNameGSPIM ;
                        gtfs:route ?routeGSPIM .
                    OPTIONAL { ?tripGSPIMEC rdfs:label ?cancelGSPIMEC }.
                    FILTER(!BOUND(?cancelGSPIMEC))

                    ?routeGSPIM #a gtfs:Route ;
                        gtfs:shortName ?routeNumberGSPIM .

                    ?stopTimeGSPdl #a gtfs:StopTime ;
                            gtfs:stop ?stopGSPdl ;
                            gtfs:trip ?tripGSPIMEC ;
                            gtfs:departureTime ?departureTimeGSPdl .
                    OPTIONAL { ?stopTimeGSPdl gtfs:comment ?delayGSPdl }.
                    BIND(IF(BOUND(?delayGSPdl),(?departureTimeGSPdl + ?delayGSPdl), ?departureTimeGSPdl) as ?timeGSPdl)
                    
                    FILTER (?timeGSPdl >= ?windowGSP)
                    # FILTER (?timeGSPdl > ?midnight)

                    ?stopTimeIMECdl #a gtfs:StopTime ;
                            gtfs:stop ?stopIMECdl ;
                            gtfs:trip ?tripGSPIMEC ;
                            gtfs:departureTime ?departureTimeIMECdl .
                    OPTIONAL { ?stopTimeIMECdl gtfs:comment ?delayIMECdl }.
                    BIND(IF(BOUND(?delayIMECdl),(?departureTimeIMECdl + ?delayIMECdl), ?departureTimeIMECdl) as ?timeIMECdl)
                    
                    FILTER (?timeIMECdl > ?timeGSPdl && ?timeIMECdl <= ?endTime)
                }
            }
        }    
    }

} ORDER BY ?departureTimeSTdl ?departureTimeSNnmbs ?departureTimeGSPdl;