@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .
@prefix map: <http://mapping.example.com/> .
@prefix ma: <http://www.w3.org/ns/ma-ont#> .
@prefix sd: <http://www.w3.org/ns/sparql-service-description#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix rev: <http://purl.org/stuff/rev#> .
@prefix v: <http://rdf.data-vocabulary.org/#> .
@prefix schema: <http://schema.org/> .
@prefix gtfs: <http://vocab.gtfs.org/terms#> .
@prefix geo: <http://www.w3.org/2003/01/geo/wgs84_pos#> .
@prefix dct: <http://purl.org/dc/terms/> .
@base <http://example.com> .

<#AgencyMapping> a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/thomas/data/nmbs-gtfs/agency.csv";
    rml:referenceFormulation ql:CSV
  ];

  rr:subjectMap [
    rr:template "http://example.com/nmbs/agency/{agency_id}" ;
    rr:class gtfs:Agency
  ];

  rr:predicateObjectMap [
    rr:predicate gtfs:fareUrl ;
    rr:objectMap [
      rml:reference "agency_url";
      rr:termType rr:IRI ;
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate foaf:name ;
    rr:objectMap [
      rml:reference "agency_name"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate gtfs:timeZone ;
    rr:objectMap [
      rml:reference "agency_timezone"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate dct:language ;
    rr:objectMap [
      rml:reference "agency_lang"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate foaf:phone ;
    rr:objectMap [
      rml:reference "agency_phone"
    ]
  ].

<#CalendarDatesMapping> a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/thomas/data/nmbs-gtfs/calendar_dates.csv" ;
    rr:class gtfs:CalendarDateRule
  ];

  rr:subjectMap [
    rr:template "http://example.com/nmbs/calendar_date_rule/{service_id}-{date}"
  ];

  rr:predicateObjectMap [
    rr:predicate dct:date ;
    rr:objectMap [
      rml:reference "date" ;
      rr:datatype xsd:date
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate gtfs:dateAddition ;
    rr:objectMap [
      rml:reference "exception_type" ;
      rr:datatype xsd:boolean
    ]
  ].

<#RoutesMapping> a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/thomas/data/nmbs-gtfs/routes.csv" ;
    rr:class gtfs:Route
  ];

  rr:subjectMap [
    rr:template "http://example.com/nmbs/routes/{route_id}"
  ];

  rr:predicateObjectMap [
    rr:predicate gtfs:shortName ;
    rr:objectMap [
      rml:reference "route_short_name"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate gtfs:longName ;
    rr:objectMap [
      rml:reference "route_long_name"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate dct:description ;
    rr:objectMap [
      rml:reference "route_desc"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate gtfs:routeType ;
    rr:objectMap [
      rml:reference "route_type"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate gtfs:routeUrl ;
    rr:objectMap [
      rml:reference "route_url" ;
      rr:termType rr:IRI
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate gtfs:color ;
    rr:objectMap [
      rml:reference "route_color"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate gtfs:textColor ;
    rr:objectMap [
      rml:reference "route_text_color"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate gtfs:Agency
    rr:objectMap [
      rr:parentTriplesMap <#AgencyMapping>;
      rr:joinCondition [
        rr:child "agency_id" ;
        rr:parent "agency_id" ;
      ];
    ]
  ].

<#ServiceMapping> a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/thomas/data/nmbs-gtfs/calendar_dates.csv" ;
    rr:class gtfs:Service
  ];

  rr:subjectMap [
    rr:template "http://example.com/nmbs/services/{service_id}"
  ];

  rr:predicateObjectMap [
    rr:predicate gtfs:serviceRule ;
    rr:objectMap [
      rr:parentTriplesMap <#CalendarDatesMapping>;
      rr:joinCondition [
        rr:child "service_id" ;
        rr:parent "service_id" ;
      ];
    ]
  ].

<#StopsMapping> a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/thomas/data/nmbs-gtfs/stops.csv" ;
    rr:class gtfs:Stop
  ];

  rr:subjectMap [
    rr:template "http://example.com/nmbs/stops/{stop_id}"
  ];

  rr:predicateObjectMap [
    rr:predicate gtfs:code ;
    rr:objectMap [
      rml:reference "stop_code";
      rr:datatype xsd:integer
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate dct:identifier ;
    rr:objectMap [
      rml:reference "stop_id"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate geo:lat ;
    rr:objectMap [
      rml:reference "stop_lat";
      rr:datatype xsd:double
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate geo:long ;
    rr:objectMap [
      rml:reference "stop_lon" ;
      rr:datatype xsd:double
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate gtfs:zone ;
    rr:objectMap [
      rml:reference "zone_id"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate foaf:page ;
    rr:objectMap [
      rr:template "{stop_url}"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate gtfs:locationType ;
    rr:objectMap [
      rml:reference "location_url";
      rr:datatype xsd:enumeration
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate dct:identifier ;
    rr:objectMap [
      rml:reference "platform_code"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate gtfs:parentStation
    rr:objectMap [
      rr:parentTriplesMap <#StopsMapping>;
      rr:joinCondition [
        rr:child "parent_station" ;
        rr:parent "stop_id" ;
      ];
    ]
  ].

<#StopTimesMapping> a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/thomas/data/nmbs-gtfs/stop_times.csv";
    rr:class gtfs:StopTime
  ];

  rr:subjectMap [
    rr:template "http://example.com/nmbs/stoptimes/{trip_id}-{stop_id}"
  ];

  rr:predicateObjectMap [
    rr:predicate gtfs:trip ;
    rr:objectMap [
      rr:parentTriplesMap <#TripsMapping>;
      rr:joinCondition [
        rr:child "trip_id";
        rr:parent "stop_id"
      ];
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate gtfs:arrivalTime ;
    rr:objectMap [
      rml:reference "arrival_time" ;
      rr:datatype xsd:time
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate gtfs:departureTime ;
    rr:objectMap [
      rml:reference "departure_time" ;
      rr:datatype xsd:dateTime
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate gtfs:stop ;
    rr:objectMap [
      rr:parentTriplesMap <#StopsMapping>;
      rr:joinCondition [
        rr:child "stop_id" ;
        rr:parent "stop_id" ;
      ];
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate gtfs:stopSequence ;
    rr:objectMap [
      rml:reference "stop_sequence" ;
      rr:datatype xsd:integer
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate gtfs:headsign ;
    rr:objectMap [
      rml:reference "stop_headsign"
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate gtfs:pickupType ;
    rr:objectMap [
      rml:reference "pickup_type" ;
      rr:datatype xsd:enumeration
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate gtfs:dropOffType ;
    rr:objectMap [
      rml:reference "drop_off_type" ;
      rr:datatype xsd:enumeration
    ]
  ];

  rr:predicateObjectMap [
    rr:predicate gtfs:distanceTraveled ;
    rr:objectMap [
      rml:reference "shape_dist_traveled"
    ]
  ].



  map_stoptimes_000:
    sources:
    - [/home/thomas/data/nmbs-gtfs/stop_times.csv~csv]
    s: http://example.com/nmbs/stoptimes/$(trip_id)-$(stop_id)
    po:
    - [rdf:type, http://vocab.gtfs.org/terms#StopTime]
    - [gtfs:arrivalTime, $(arrival_time), http://www.w3.org/2001/XMLSchema#time]
    - [gtfs:departureTime, $(departure_time), http://www.w3.org/2001/XMLSchema#dateTime]
    - [gtfs:stopSequence, $(stop_sequence), http://www.w3.org/2001/XMLSchema#integer]
    - [gtfs:headsign, $(stop_headsign)]
    - [gtfs:pickupType, 'http://example.com/nmbs/resource/PickupType/{pickup_type}']
    - [gtfs:dropOffType, 'http://example.com/nmbs/resource/DropOffType/{drop_off_type}']
    - [gtfs:distanceTraveled, $(shape_dist_traveled)]
    - p: gtfs:trip
      o:
        mapping: map_trips_000
        condition:
          function: equal
          parameters:
          - [str1, $(trip_id)]
          - [str2, $(trip_id)]
    - p: gtfs:stop
      o:
        mapping: map_stops_000
        condition:
          function: equal
          parameters:
          - [str1, $(stop_id)]
          - [str2, $(stop_id)]
  map_transfers_000:
    sources:
    - [/home/thomas/data/nmbs-gtfs/transfers.csv~csv]
    s: http://example.com/nmbs/transfers/$(from_stop_id)_$(to_stop_id)
    po:
    - [rdf:type, http://vocab.gtfs.org/terms#TransferRule]
    - [gtfs:originStop, $(from_stop_id)]
    - [gtfs:destinationStop, $(to_stop_id)]
    - [gtfs:transferType, $(transfer_type)]
  map_translations_000:
    sources:
    - [/home/thomas/data/nmbs-gtfs/translations.csv~csv]
    s: http://example.com/nmbs/translations/$(trans_id)
    po:
    - [rdf:type, http://vocab.gtfs.org/terms#Route]
    - [dct:language, $(lang)]
    - [gtfs:headsign, $(translation)]
    - p: gtfs:headsign
      o:
        mapping: map_trips_000
        condition:
          function: equal
          parameters:
          - [str1, $(trans_id)]
          - [str2, $(trip_headsign)]
  map_trips_000:
    sources:
    - [/home/thomas/data/nmbs-gtfs/trips.csv~csv]
    s: http://example.com/nmbs/trips/$(trip_id)
    po:
    - [rdf:type, http://vocab.gtfs.org/terms#Trip]
    - [gtfs:headsign, $(trip_headsign)]
    - [gtfs:shortName, $(trip_short_name)]
    - [gtfs:direction, $(direction_id)]
    - [gtfs:block, $(block_id)]
    - p: gtfs:route
      o:
        mapping: map_routes_000
        condition:
          function: equal
          parameters:
          - [str1, $(route_id)]
          - [str2, $(route_id)]
